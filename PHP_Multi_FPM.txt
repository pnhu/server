MULTI PHP (FPM), UBUNTU 20.04
-------------------------------
: Pudin S.
: t.me/pudin_ira
: instagram.com/pudin.ira
: https://www.pdn.my.id
: youtube.com/c/pudintv
: youtube.com/c/pudintea



Menginstal Apache
================
Paket server web Apache tersedia di bawah repositori default. Buka terminal di sistem Ubuntu Anda, lalu jalankan perintah berikut untuk menginstal versi terbaru server web Apache yang tersedia.

# sudo apt update 
# sudo apt install apache2 libapache2-mod-fcgid


Menginstal PHP
==================
PPA dipertahankan untuk instalasi PHP pada sistem Ubuntu dari tahun-tahun yang panjang. Anda hanya perlu menambahkan PPA itu ke sistem Anda untuk menginstal paket. Gunakan beberapa perintah di bawah ini untuk menambahkan PPA ke sistem Anda.

# sudo apt install software-properties-common
# sudo add-apt-repository ppa:ondrej/php


Untuk tutorial ini, kami menggunakan PHP 5.6 dan PHP 7.4 untuk mengkonfigurasi dengan server web Apache. Untuk menggunakan beberapa versi PHP, kami akan menggunakan PHP FPM dan FastCGI. Mari kita instal paket-paket berikut di sistem Anda.

# sudo apt update -y
# sudo apt install php5.6 php5.6-fpm -y
# sudo apt install php7.4 php7.4-fpm -y

Setelah instalasi, layanan php-fpm akan dimulai secara otomatis. Gunakan perintah berikut untuk memastikan kedua layanan berjalan.

# sudo systemctl status php5.6-fpm
# sudo systemctl status php7.4-fpm


Konfigurasi Apache dengan Beberapa PHP
===================================
Sekarang aktifkan beberapa modul yang diperlukan untuk konfigurasi beberapa versi PHP dengan Apache. Modul-modul ini diperlukan untuk mengintegrasikan PHP FPM dan FastCGI dengan server Apache.

# sudo a2enmod actions fcgid alias proxy_fcgi

Bersiaplah untuk konfigurasi situs web di server Apache Anda. Untuk tujuan pengujian, saya mengonfigurasi dua situs web agar berfungsi dengan dua versi PHP-2 yang berbeda. Pertama, buat dua direktori di server Anda.

# sudo mkdir /var/www/php56-app
# sudo mkdir /var/www/php74-app

Sekarang, buat dan index.php yang berisi phpinfo();fungsi tersebut.

echo "<?php phpinfo(); ?>" > /var/www/php56-app/index.php
echo "<?php phpinfo(); ?>" > /var/www/php74-app/index.php

Mari kita mulai pembuatan VirtualHost. Apache menyimpan semua file konfigurasi VirtualHost di bawah /etc/apache2/sites-available dengan ekstensi .conf. Buat file untuk host virtual pertama dan edit di editor teks favorit Anda.

# sudo nano /etc/apache2/sites-available/php56.example.com.conf

Tambahkan konten berikut. Pastikan untuk menggunakan ServerName dan jalur direktori yang benar sesuai dengan pengaturan Anda. Situs web ini dikonfigurasi untuk bekerja dengan PHP 5.6.

<VirtualHost *:80>
    ServerName php56.example.com
    DocumentRoot /var/www/php56-app
    <Directory /var/www/php56-app>
        Options -Indexes +FollowSymLinks +MultiViews
        AllowOverride All
        Require all granted
    </Directory>

    <FilesMatch \.php$>
        # Apache 2.4.10+ can proxy to unix socket
        SetHandler "proxy:unix:/var/run/php/php5.6-fpm.sock|fcgi://localhost"
    </FilesMatch>

</VirtualHost>

Demikian pula, buat file konfigurasi VirtualHost kedua agar berfungsi dengan PHP 7.2. Edit file konfigurasi di editor teks:

# sudo nano /etc/Apache2/sites-available/php74.example.com.conf

Tambahkan konten berikut ke file dengan ServerName dan DocumentRoot yang tepat.

<VirtualHost *:80>
    ServerName php72.example.com
    DocumentRoot /var/www/php74-app
    <Directory /var/www/php74-app>
        Options -Indexes +FollowSymLinks +MultiViews
        AllowOverride All
        Require all granted
    </Directory>

    <FilesMatch \.php$>
        SetHandler "proxy:unix:/var/run/php/php7.4-fpm.sock|fcgi://localhost"
    </FilesMatch>

</VirtualHost>

Anda berdua dari situs web dikonfigurasi sekarang. Tapi mereka masih belum aktif. Apache menyimpan situs aktif di bawah direktori /etc/Apache2/sites-enabled. Anda cukup membuat tautan simbolis dari file konfigurasi ke direktori ini atau menggunakan perintah di bawah ini untuk melakukan hal yang sama.

# sudo a2ensite php56.example.com
# sudo a2ensite php74.example.com
Setelah melakukan semua perubahan, restart Apache untuk memuat ulang perubahan pengaturan baru.

# sudo systemctl restart Apache2
Penyiapan Anda telah selesai sekarang. Lanjutkan ke langkah berikutnya untuk menguji penyiapan Anda.

Uji Pengaturan Anda
================
Edit file /etc/hosts di sistem lokal Anda dan buat entri seperti di bawah ini. Ini akan menyelesaikan nama sementara ke alamat IP localhost.

sudo vim /etc/hosts
Tambahkan entri berikut ke akhir file

127.0.0.1 php74.example.com
127.0.0.1 php56.example.com

Buka browser web dan kunjungi kedua situs tersebut. Anda akan melihat bahwa php56.example.com menunjukkan versi PHP 5.6 dan php74.example.com menunjukkan PHP 7.4 sebagai konfigurasi.

http://php74.example.com :


====================== PERCOBAAN PHP 8 ===================================


sudo apt update 
sudo apt install apache2 libapache2-mod-fcgid

sudo apt install software-properties-common
sudo add-apt-repository ppa:ondrej/php

sudo apt install php8.1 php8.1-fpm -y

sudo systemctl status php8.1-fpm

nano /etc/php/8.1/fpm/php-fpm.conf //lihat aja



Install Extension
sudo apt-get install php8.1-mysql php8.1-json php8.1-gd php8.1-mbstring php8.1-curl php8.1-cgi php8.1-xsl php8.1-zip -y
sudo apt install php8.1-mysql -y
sudo apt install php8.1-curl php8.1-zip -y
